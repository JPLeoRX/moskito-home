<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.moskito</groupId>
    <artifactId>moskito-home</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <properties>
        <source.version>1.8</source.version>
        <target.version>1.8</target.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <junit.version>4.12</junit.version>
        <servlet.version>4.0.0</servlet.version>
        <mysql.connector.version>6.0.6</mysql.connector.version>
        <spring.version>4.3.13.RELEASE</spring.version>
        <log4j.version>2.10.0</log4j.version>
        <java-jwt.version>3.3.0</java-jwt.version>
        <jackson.version>1.9.13</jackson.version>

        <wagon.version>1.0</wagon.version>
        <wagon.serverId>moskito</wagon.serverId>
        <wagon.serverUser>zeno</wagon.serverUser>
        <wagon.serverIpAdress>10.110.237.21</wagon.serverIpAdress>
        <wagon.serverWarPath>home/zeno/apache-tomcat-8.5.24/webapps</wagon.serverWarPath>
        <wagon-ssh.version>3.0.0</wagon-ssh.version>
    </properties>


    <dependencies>
        <!-- Junit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <!--Servlet-Api -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${servlet.version}</version>
        </dependency>

        <!-- MySQL database driver -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.connector.version}</version>
        </dependency>

        <!-- Log4j -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
        </dependency>

        <!-- JSON Web Tokens -->
        <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>java-jwt</artifactId>
            <version>${java-jwt.version}</version>
        </dependency>

        <!-- Jackson JSON Mapper -->
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- Spring Framework -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
    </dependencies>







    <!-- Build using "mvn clean install compile war:war wagon:upload-single@deploy-war" -->
    <build>
        <finalName>moskito-home</finalName>

        <!-- Maven Wagon - SSH encryption (to enable ssh-key authorization for remote server) -->
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh</artifactId>
                <version>${wagon-ssh.version}</version>
            </extension>
        </extensions>


        <plugins>
            <!-- Maven Compiler -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <source>${source.version}</source>
                    <target>${target.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <!-- Maven Wagon (plugin for remote deployment) -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>wagon-maven-plugin</artifactId>
                <version>${wagon.version}</version>

                <configuration>
                    <serverId>${wagon.serverId}</serverId>
                    <fromFile>${project.build.directory}/${project.build.finalName}.war</fromFile>
                    <url>scp://${wagon.serverUser}@${wagon.serverIpAdress}/${wagon.serverWarPath}</url>
                </configuration>

                <executions>
                    <execution>
                        <id>deploy-war</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>upload-single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>